@using Backend 

<center>
    <h3>@Name</h3>

    <table class="table-auto" style="width: 100%">
        @for (int row = 0; row < Rows; row++)
        {
            <tr>
                @for (int col = 0; col < Cols; col++)
                {
                    <td class="border px-2 py-1">
                        <center>
                            <b>@GetId(row, col)</b>
                            <p>@GetValue(row, col)</p>
                        </center>
                    </td>
                }
            </tr>
        }
    </table>

    @foreach (var item in new string[] { "binary", "decimal", "hex" })
    {
        <div>
            <input type="radio" name="@Name" id="@(Name)-@(item)" value="@item" @onchange="RadioSelection" checked=@(RadioValue.Equals(item,StringComparison.OrdinalIgnoreCase)) />
            <label for="@(Name)-@(item)">@item</label>
        </div>
    }
</center>

@code {
    [Parameter] public string Name { get; set; }
    [Parameter] public Backend.GeneralStorage Data { get; set; }

    [Parameter] public int Rows { get; set; }
    [Parameter] public int Cols { get; set; }

    public string RadioValue = "hex";

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    public int GetId(int row, int col)
    {
        return (row * Cols) + col;
    }

    public string GetValue(int row, int col)
    {
        int id = GetId(row, col);
        int b = RadioValue switch
        {
            "binary" => 2,
            "decimal" => 10,
            "hex" => 16,
            _ => 10
        };

        string value = Convert.ToString(Data.GetData(id), b);

        string output = "";
        if (b != 10 && value != "0")
        {
            int chunkSize = (int)Math.Log(256, b);
            int padAmount = (int)(chunkSize * Math.Ceiling(value.Length / (float)chunkSize));

            value = value.PadLeft(padAmount, '0');

            for (int i = 0; i <= value.Length - chunkSize; i += chunkSize)
                output += value.Substring(i, chunkSize) + " ";
        }
        else
        {
            output = value;
        }

        return output.ToUpper();
    }

    void RadioSelection(ChangeEventArgs args)
    {
        RadioValue = args.Value.ToString();
    }
}
